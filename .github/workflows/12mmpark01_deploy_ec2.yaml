name: massai mara park 01 deploy ec2

on:
  workflow_dispatch

env:
    HOSTNAME: "3.35.138.117"
    USER_NAME: ubuntu

jobs:
  build_jar:
    name: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
            java-version: '17'
            distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: grant execute permission
        run: chmod +x gradlew

      - name: build with gradle
        run: ./gradlew clean build

      - name: list build/libs directory
        run: ls -al ./build/libs

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: application.jar
          path: build/libs/*SNAPSHOT.jar

  run_test_ec2:
    needs: build_jar
    name: Run and Test on EC2
    runs-on: ubuntu-22.04

    steps:
      - name: download JAR artifact
        uses: actions/download-artifact@v4
        with: 
          name: application.jar

      - name: setup SSH Directory
        run: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh

      - name: make private key file
        run: |
            echo "${{secrets.EC2_PRIVATEKEY}}" > ~/.ssh/ec2_key
            chmod 600 ~/.ssh/ec2_key

      - name: upload JAR via SCP
        run: |
          scp -i ~/.ssh/ec2_key \
          -o "StrictHostKeyChecking=no" \
          -o "UserKnownHostsFile=/dev/null" \ 
          -P 22 *SNAPSHOT.jar ${{env.USER_NAME}}@${{env.HOSTNAME}}:~/

      - name: cleanup private key
        if: always()
        run: |
          rm -f ~/.ssh/ec2.key

          deploy_ec2:
            needs: build_jar
            name: JAR upload to EC2
            runs-on: ubuntu-22.04
        
            steps:
              - name: download JAR artifact
                uses: actions/download-artifact@v4
                with: 
                  name: application.jar
        
              - name: setup SSH Directory
                run: |
                    mkdir -p ~/.ssh
                    chmod 700 ~/.ssh
        
              - name: make private key file
                run: |
                    echo "${{secrets.EC2_PRIVATEKEY}}" > ~/.ssh/ec2_key
                    chmod 600 ~/.ssh/ec2_key

              - name: make private key file
                run: |
                   echo "${{secrets.EC2_PRIVATEKEY}}" > ~/.ssh/ec2_key
                   chmod 600 ~/.ssh/ec2_key

            - name: test SSH connect to ec2
              run: |
                 echo "SSH 연결 테스트 시작..."

                 ssh -vvv StrictHostKeyChecking=no \
                 -o "UserKnownHostsFile=/dev/null" \
                 -i ~/.ssh/ec2_key -p 22 \ 
                 ${{env.USER_NAME}}@${{env.HOSTNAME}} '

                    java -jar ./massai_mara_park-0.0.1-SNAPSHOT.jar &
                 '

                 echo "SSH 연결 테스트 끝..."

            - name: cleanup private key
              if: always()
              run: |
                rm -f ~/.ssh/ec2.key
